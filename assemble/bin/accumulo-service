#! /usr/bin/env bash

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

function print_usage {
  cat <<EOF
Usage: accumulo-service <service> <command>

Services:
  gc          Accumulo garbage collector
  monitor     Accumulo monitor
  master      Accumulo master
  tserver     Accumulo tserver
  tracer      Accumulo tracter

Commands:
  start       Start service
  stop        Stop service
  kill        Kill service

EOF
  exit 1
}

function invalid_args {
  echo -e "Invalid arguments: $1\n"
  print_usage
  exit 1
}

function get_host {
  host="$(hostname -s)"
  if [[ -z "$host" ]]; then
    netcmd=/sbin/ifconfig
    [[ ! -x $netcmd ]] && netcmd='/bin/netstat -ie'
    host=$($netcmd 2>/dev/null| grep "inet[^6]" | awk '{print $2}' | sed 's/addr://' | grep -v 0.0.0.0 | grep -v 127.0.0.1 | head -n 1)
    if [[ $? != 0 ]]; then
      host=$(python -c 'import socket as s; print s.gethostbyname(s.getfqdn())')
    fi
  fi 
  echo "$host"
}

function main() {

  if [[ -z $1 ]]; then
    invalid_args "<service> cannot be empty"
  fi

  # Resolve base directory
  SOURCE="${BASH_SOURCE[0]}"
  while [ -h "${SOURCE}" ]; do
     bin="$( cd -P "$( dirname "${SOURCE}" )" && pwd )"
     SOURCE="$(readlink "${SOURCE}")"
     [[ "${SOURCE}" != /* ]] && SOURCE="${bin}/${SOURCE}"
  done
  bin="$( cd -P "$( dirname "${SOURCE}" )" && pwd )"
  basedir=$( cd -P "${bin}"/.. && pwd )

  export ACCUMULO_CONF_DIR="${ACCUMULO_CONF_DIR:-$basedir/conf}"
  export ACCUMULO_LIB_DIR="${ACCUMULO_LIB_DIR:-$basedir/lib}"
  source "${ACCUMULO_LIB_DIR}"/scripts/load-env.sh

  service=$1
  case "$service" in
    gc|master|monitor|tserver|tracer)
      if [[ -z $2 ]]; then
        invalid_args "<command> cannot be empty"
      fi
      case "$2" in 
        start)
          "${ACCUMULO_LIB_DIR}/scripts/service.sh" start "$(get_host)" "$1"
          ;;
        stop)
          "${ACCUMULO_LIB_DIR}/scripts/service.sh" stop "$(get_host)" "$service" TERM
          ;;
        kill)
          "${ACCUMULO_LIB_DIR}/scripts/service.sh" stop "$(get_host)" "$service" KILL
          ;;
        *)
          invalid_args "'$2' is an invalid <command>"
          ;;
      esac
      ;;
    *)
      invalid_args "'$1' is an invalid <service>"
      ;;
  esac
}

main "$@"
